#######################################
#### Configs
#######################################



#######################################

[teamspeak connection settings]

#can be IP or FQDN
host = 127.0.0.1

# Default port for ServerQuery access. Shouldn't need to change this.
port = 10011

user = serveradmin
passwd = xxxxxxx

## Pool Settings
# Maximum connections in the pool. Should be >= 2
pool_size = 4
# Connection time to live, checked when returned to the pool
pool_ttl = 600
# Connection time to idle, checked when returned to the pool
pool_tti = 120
# Number of uses after a connection will be destroyed
pool_max_usage = 5

#######################################

#######################################

[teamspeak other settings]

#Default is one (only change if you have multple servers)
server_id = 1

#Channel we want  the bot to sit in and listen for requests
channel_name = Registration

#Group the BOT will add people to if they authenticate
verified_group = Verified

#######################################

#######################################

[bot settings]

#Name displayed to users
bot_nickname = Verify BOT

#Seconds between trying to restart bot teamspeak connection if it's connection timed out. Added to prevent loopig to death if it fails. (seconds)
bot_sleep_conn_lost=30

# How often the bot idle loop hits (seconds), this is also how often bot checks it's pending scheduled events such as broadcast message or auditng users.
bot_sleep_idle=15

# options are: ['verifyme','setguild','hideguilds','unhideguild','ping'] --Can be any combinations of options for allowed commands
cmd_list=['verifyme','setguild','hideguild','unhideguild','ping']

#Change the name of the database file the script will use
db_file_name = BOT.db

# How often to audit a user (days)
audit_period=7

# How often the bot will check if users are past the auditing policy period (days)
audit_interval=15

# Allow/restrict TeamSpeak Users coming from more than one computer (teamspeak creates new ids for users per computer, so two laptops means two different ids)
# Set to any number 1 or higher (i think it won't work past two but I don't have the means to test that many TS client ID's, maybe one day)
client_restriction_limit=2

# How frequentin seconds the bot should advertise the broadcast message info it's channel (restricted by how often the bot is checking for scheduled items changeable in config option 'bot_sleep_idle')
# Set to 0 to disable broadcasting
broadcast_message_timer=0

# The language in which the bot talks to the users. Currently, only EN and DE are supported.
# Multiple locales can be separated with a + to send messages in multiple languages, separated by a newline, eg DE+EN.
locale=EN

# Whether a user should lose all groups when his API key is no longer accepted.
# This is useful if you have groups for guilds that would enable users that lost the authentification group to still see the server.
purge_completely=False

# This is a list of groups that will stay on users, even if they lose authentification, if you enabled the purge_completely feature.
# Your admin group should always be in this list to avoid getting locked out of your own server if your left the allowed GW2 servers.
purge_whitelist=['Server Admin']

#######################################

#######################################

[auth settings]

# The guild wars 2 servers user must be on, expected as a python list Ex. ['Kaineng','Tarnished Coast'] 
required_servers = ['Kaineng','Tarnished Coast']

# Required Level for at least one character on account (set to 0 to disable character checks (useful if Arena Net's GW2 API breaks again)
required_level = 80

#######################################

#######################################

[ipc settings]

# What port the bot listens on for IPC requests
ipc_port = 10137

# Group that is polled and sent via IPC regularly
poll_group_names = ['Active Raidlead']

#######################################

#######################################

[reset roster]
# Tuple of pattern and clean label.
# Pattern for the toplevel and sub channels. Note that a "Teamspeak pattern" is used,
# aka a substring and should therefore be unique, see:
# https://sk-gameservers.de/ts3-server-query-befehle-alle#channelfind
# the clean label is what will be used to (re)set the label when a command needs to do so.
# Variables you can use that will be replaced:
# $DATE
reset_top_level_channel = ('reset roster','Reset Roster') # pattern will find "Reset Roster - 13.09.19" for example
reset_rgl_channel = ('red bl','Red BL:')
reset_bgl_channel = ('blue bl','Blue BL:')
reset_ggl_channel = ('green bl','Green BL:')
reset_ebg_channel = ('ebg','EBG:')

#######################################

#######################################

[guilds]
guilds_parent_channel = Guilds
guild_sub_channels = ('Lobby', 'Raids')
guild_contact_channel_group = Gilden Ansprechpartner
minimum_talk_power = 50
maximum_talk_power = 90
minimum_sort_order = 100
guild_sort_id=1100

#######################################

#######################################

[DEBUGGING]

#Set to yes for more debug information
DEBUG=False

#######################################
