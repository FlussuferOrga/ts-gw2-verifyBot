openapi: 3.0.0
info:
  title: ts-gw2-verifyBot
  description: ts-gw2-verifyBot
  version: 1.0.0
paths:
  /health:
    get:
      summary: Simple health/liveness check
      operationId: healthCheck
      tags:
        - meta
      responses:
        default:
          $ref: '#/components/responses/genericErrorResponse'
        200:
          description: Health Check
          content:
            text/plain:
              schema:
                type: string
                example: "OK"
  /health/thread-dump:
    get:
      summary: List Stacktraces for threads
      operationId: healthStacktraces
      tags:
        - meta
      responses:
        default:
          $ref: '#/components/responses/genericErrorResponse'
        200:
          description: Thread Dump
          content:
            text/plain:
              schema:
                type: string
                example: |
                  # Thread: waitress-1(5428)
                  File: "C:\Python38\lib\threading.py", line 890, in _bootstrap
                   self._bootstrap_inner()
                  File: "C:\Python38\lib\threading.py", line 932, in _bootstrap_inner
                   self.run()
                  File: "C:\Python38\lib\threading.py", line 870, in run
                   self._target(*self._args, **self._kwargs)
                  File: "C:\app\verifyBot\venv\lib\site-packages\waitress\task.py", line 72, in handler_thread
                   self.queue_cv.wait()
                  File: "C:\Python38\lib\threading.py", line 302, in wait
                   waiter.acquire()
  /registration:
    delete:
      summary: delete a registration for an account
      operationId: registrationDelete
      tags:
        - registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - gw2account
              properties:
                gw2account:
                  type: string
                  example: "User.1234"
      responses:
        default:
          $ref: '#/components/responses/genericErrorResponse'
        200:
          description: User registration details
          content:
            application/json:
              schema:
                type: object
                properties:
                  changes:
                    type: integer
  /commanders:
    get:
      summary: List active commanders
      operationId: commandersList
      tags:
        - commanders
      responses:
        default:
          $ref: '#/components/responses/genericErrorResponse'
        200:
          description: Response with active commanders
          content:
            application/json:
              schema:
                type: object
                properties:
                  commanders:
                    type: array
                    items:
                      type: object
                      properties:
                        account_name:
                          type: string
                        ts_channel_name:
                          type: string
                        ts_channel_path:
                          type: array
                          items:
                            type: string
                        ts_cluid:
                          type: string
                        ts_display_name:
                          type: string
                        ts_join_url:
                          type: string

  /guild:
    post:
      summary: Create a Guild Group and channel
      operationId: guildCreate
      tags:
        - guilds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GuildCreateRequest"
      responses:
        default:
          $ref: '#/components/responses/genericErrorResponse'
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: string
    delete:
      summary: "Deletes a Guild channel and Group"
      operationId: guildDelete
      tags:
        - guilds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
                  example: "Foo Fighters"
      responses:
        default:
          $ref: '#/components/responses/genericErrorResponse'
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: string
components:
  responses:
    genericErrorResponse:
      description: "Error Response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    ErrorResponse:
      type: object
      properties:
        name:
          description: Short error name
          type: string
        code:
          description: HTTP error code
          type: number
        desc:
          description: Description of the error that occured
          type: string
    GuildCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Foo Fighters"
          minLength: 3
        groupname:
          type: string
          description: Default is tag if not supplied or null
          minLength: 3
          nullable: true
          example: null
        contacts:
          type: array
          nullable: true
          example: [ 'UserName.1234' ]
          items:
            $ref: "#/components/schemas/GuildContact"
    GuildContact:
      type: string

